'''
안정적인 문자열

여는 괄호와 닫는 괄호만으로 이루어진 문자열이 주어진다. 
여기서 안정적인 문자열을 만들기 위한 최소 연산의 수를 구하려고 한다. 안정적인 문자열의 정의란 다음과 같다.
1. 빈 문자열은 안정적이다.
2. S가 안정적이라면, {S}도 안정적인 문자열이다.
3. S와 T가 안정적이라면, ST(두 문자열의 연결)도 안정적이다.
{}, {}{}, {{}{}}는 안정적인 문자열이지만, }{, {{}{, {}{는 안정적인 문자열이 아니다.
문자열에 행할 수 있는 연산은 여는 괄호를 닫는 괄호로 바꾸거나, 닫는 괄호를 여는 괄호로 바꾸는 것 2가지이다.
'''

num = 1
while True:
    s = input()
    # "{" 를 저장하는 스택
    stack = []
    res = 0
    if '-' in s:
        break
    for i in s:
        if i == "{":
            stack.append(i)
        else:
            # 스택이 비어있지 않다면
            if stack:
                # '}'과 짝을 맞춰줘야 하므로 기존의 '{' 을 저장하는 스택에서 하나를 pop
                stack.pop()
            # 스택이 비어있다면 
            else:
                res += 1
                stack.append("{")
    if stack:
        '''
        기존 '{'만을 저장하는 스택
        그 쌍 중 하나만 괄호 방향을 바꿔주면 됨
        '''
        if len(stack) % 2 == 0:    
            res += len(stack)//2
    print(f"{num}. {res}")
    num += 1
